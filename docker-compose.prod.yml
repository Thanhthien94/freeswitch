version: '3.8'

services:
  # PostgreSQL Database
  postgres-db:
    image: postgres:15-alpine
    container_name: freeswitch-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pbx_db}
      POSTGRES_USER: ${POSTGRES_USER:-pbx_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pbx_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - pbx-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-pbx_user} -d ${POSTGRES_DB:-pbx_db}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis-cache:
    image: redis:7-alpine
    container_name: freeswitch-redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    networks:
      - pbx-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ Message Queue
  rabbitmq-queue:
    image: rabbitmq:3-management-alpine
    container_name: freeswitch-rabbitmq-prod
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-pbx_user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-pbx_password}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - pbx-network
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 3

  # FreeSWITCH Core
  freeswitch-core:
    image: safarov/freeswitch:latest
    container_name: freeswitch-core-prod
    environment:
      - FREESWITCH_LOG_LEVEL=${FREESWITCH_LOG_LEVEL:-info}
    volumes:
      - ./freeswitch/conf:/etc/freeswitch
      - ./freeswitch/recordings:/var/lib/freeswitch/recordings
      - ./freeswitch/logs:/var/log/freeswitch
      - freeswitch_data:/var/lib/freeswitch
    ports:
      - "5060:5060/udp"    # SIP
      - "5080:5080/udp"    # SIP (alternative)
      - "16384-16484:16384-16484/udp"  # RTP
    networks:
      - pbx-network
    restart: unless-stopped
    depends_on:
      postgres-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "fs_cli", "-x", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NestJS Backend API
  nestjs-api:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: freeswitch-api-prod
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-pbx_user}:${POSTGRES_PASSWORD:-pbx_password}@postgres-db:5432/${POSTGRES_DB:-pbx_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis-cache:6379
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-pbx_user}:${RABBITMQ_PASSWORD:-pbx_password}@rabbitmq-queue:5672
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - FREESWITCH_ESL_HOST=freeswitch-core
      - FREESWITCH_ESL_PORT=8021
      - FREESWITCH_ESL_PASSWORD=${FREESWITCH_ESL_PASSWORD:-ClueCon}
    volumes:
      - ./freeswitch/recordings:/app/recordings:ro
      - ./backend/logs:/app/logs
    networks:
      - pbx-network
    restart: unless-stopped
    depends_on:
      postgres-db:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
      rabbitmq-queue:
        condition: service_healthy
      freeswitch-core:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend
  frontend-ui:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: freeswitch-frontend-prod
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://your-domain.com/api/v1
      - NEXT_PUBLIC_WS_URL=wss://your-domain.com/ws
    networks:
      - pbx-network
    restart: unless-stopped
    depends_on:
      nestjs-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (if not using external Nginx Proxy Manager)
  nginx-proxy:
    image: nginx:alpine
    container_name: freeswitch-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/freeswitch.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
    networks:
      - pbx-network
    restart: unless-stopped
    depends_on:
      - frontend-ui
      - nestjs-api
    # Remove this service if using external Nginx Proxy Manager

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  freeswitch_data:
    driver: local

networks:
  pbx-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
